<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:jpa="http://www.springframework.org/schema/data/jpa"
xmlns:p="http://www.springframework.org"
xmlns:util="http://www.springframework.org/schema/util"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

<import resource="spring-properties-context.xml"/>

<jpa:repositories base-package="com.ge.capital.compliancereport.repository"/>

<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>   

<!-- ================================================== =============== -->
<!-- T R A N S A C T I O N M A N A G E R -->
<!-- ================================================== =============== -->


<tx:annotation-driven transaction-manager="transactionManager" />

<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
<property name="entityManagerFactory" ref="entityManagerFactory" />
</bean>

<!-- ================================================== =============== -->
<!-- E N T I T Y M A N A G E R F A C T O R Y -->
<!-- ================================================== =============== -->

<!--bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
<property name="dataSource" ref="dataSource"/>
<property name="loadTimeWeaver">
<bean class="org.springframework.instrument.classloading.SimpleLoadTimeWeaver">
</bean>
</property>
<property name="persistenceUnitManager" ref="excelgenerater.persistence.unit"/>
<property name="packagesToScan" value="com.ge.capital.compliancereport.domain"/>
</bean> -->


<bean id="entityManagerFactory"  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
    <property name="jpaProperties" ref="jpaProperties"/>
    <property name="persistenceUnitName" value="excelgenerater.persistence.unit" />
    <property name="packagesToScan" value="com.ge.capital.compliancereport.domain"/>
</bean>

<!-- 
<property name="jpaVendorAdapter">
<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
<property name="showSql" value="true"/>
<property name="generateDdl" value="true"/>
<property name="database" value="HSQL"></property>
</bean>
</property>
-->
<bean id="excelgenerater.persistence.unit" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
<property name="persistenceXmlLocation" value="classpath*:/META-INF/persistence.xml"/>
<property name="defaultDataSource" ref="dataSource"/>
</bean>




<!-- <bean id="entityManagerFactory"  
      class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
     <property name="dataSource" ref="dataSource" />
     <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
     <property name="jpaProperties" ref="jpaProperties"/>
     <property name="loadTimeWeaver">   
     <bean class="org.springframework.instrument.classloading.SimpleLoadTimeWeaver" />
     </property> 
     <property name="persistenceUnitName" value="excelgenerater.persistence.unit" />
    <property name="packagesToScan" value="com.ge.capital.compliancereport.domain"/>
</bean>

-->

<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
    <property name="database" value="ORACLE" />
    <property name="generateDdl" value="false" />
</bean>


<util:properties id="jpaProperties">
    <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
    <prop key="hibernate.show_sql">true</prop>
    <prop key="hibernate.format_sql">true</prop>
    <prop key="hibernate.jdbc.batch_size">50</prop>
    <prop key="hibernate.order_inserts">true</prop>
</util:properties>


<bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 <property name="driverClassName" value="${db.driverClassName}" />
 <property name="url" value="${db.url}" />
 <property name="username" value="${db.username}" />
 <property name="password" value="${db.password}" />
</bean>

<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="${db.driverClassName}" />
    <property name="jdbcUrl" value="${db.url}"/>
    <property name="user" value="${db.username}"/>
    <property name="password" value="${db.password}"/>
    <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
    <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
    <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
    <!--property name="maxStatements" value="${c3p0.maxStatements}"/>
    <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
    <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
    <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
    <property name="maxStatementsPerConnection" value="${c3p0.maxStatementsPerConnection}"/>
    <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
    <property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}"/>
    <property name="preferredTestQuery" value="${c3p0.preferredTestQuery}"/>
    <property name="testConnectionOnCheckin" value="${c3p0.testConnectionOnCheckin}"/>
    <property name="maxConnectionAge" value="${c3p0.maxConnectionAge}"/>
    <property name="maxIdleTimeExcessConnections" value="${c3p0.maxIdleTimeExcessConnections}"/>
    <property name="unreturnedConnectionTimeout" value="${c3p0.unreturnedConnectionTimeout}"/> -->
</bean>

</beans>
